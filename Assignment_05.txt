ysql> create procedure insertStudMarks(in stud_name varchar(20), in total_marks int)
    -> begin
    -> declare exit handler
    -> for invalid_marks set marks = 1;
    -> if (total_marks < 825) then
    -> signal invalid_marks 'Marks must be greater than 824!';
    -> end if;
    -> insert into Stud_Marks values(stud_name, total_marks);
    -> select concat('Inserted into student marks table!');
    -> end //
ERROR 1319 (42000): Undefined CONDITION: invalid_marks
mysql> create procedure insertStudMarks(in stud_name varchar(20), in total_marks int)
    -> begin
    -> declare exit handler
    -> for invalid_marks set marks = 1;
    -> if (total_marks < 825) then
    -> signal invalid_marks;
    -> end if;
    -> 

^C
mysql> 
mysql> 
mysql> create procedure insertStudMarks(in stud_name varchar(20), in total_marks int)
    -> begin
    -> if (total_marks < 825) then
    -> select 'Marks must be greater than 824!';
    -> else 
    -> insert into Stud_Marks values(stud_name, total_marks);
    -> end if;
    -> end //
Query OK, 0 rows affected (0.00 sec)

mysql> call insertStudMarks('Gaurav', 900);
    -> //
Query OK, 1 row affected (0.01 sec)

mysql> delimiter ;
mysql> select * from Stud_Marks;
+--------+------------+
| name   | totalMarks |
+--------+------------+
| Gaurav |        900 |
+--------+------------+
1 row in set (0.00 sec)

mysql> call insertStudMarks('xyz', 800);
+---------------------------------+
| Marks must be greater than 824! |
+---------------------------------+
| Marks must be greater than 824! |
+---------------------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

mysql> select * from Stud_Marks;
+--------+------------+
| name   | totalMarks |
+--------+------------+
| Gaurav |        900 |
+--------+------------+
1 row in set (0.00 sec)

mysql> call insertStudMarks('xyz', 824);
+---------------------------------+
| Marks must be greater than 824! |
+---------------------------------+
| Marks must be greater than 824! |
+---------------------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

mysql> 
mysql> call insertStudMarks('Kanak', 910);
Query OK, 1 row affected (0.01 sec)

mysql> call insertStudMarks('Sarthak', 905);
Query OK, 1 row affected (0.01 sec)



mysql> select * from Stud_Marks;
+---------+------------+
| name    | totalMarks |
+---------+------------+
| Gaurav  |        900 |
| Kanak   |        910 |
| Sarthak |        905 |
+---------+------------+
3 rows in set (0.00 sec)



mysql> create table Result(
    -> Roll_no int primary key,
    -> name varchar(20),
    -> class varchar(20)
    -> );
Query OK, 0 rows affected (0.07 sec)

mysql> desc Result;
\+---------+-------------+------+-----+---------+-------+
| Field   | Type        | Null | Key | Default | Extra |
+---------+-------------+------+-----+---------+-------+
| Roll_no | int(11)     | NO   | PRI | NULL    |       |
| name    | varchar(20) | YES  |     | NULL    |       |
| class   | varchar(20) | YES  |     | NULL    |       |
+---------+-------------+------+-----+---------+-------+
3 rows in set (0.01 sec)


mysql> create procedure proc_Grade(in roll int, in marks int, in stud_name varchar(20)) begin declare stud_class varchar(20); if (marks >= 990 and marks <= 1500) then set stud_class = 'Distinction'; elseif (marks >= 900 and marks <= 989) then set stud_class = 'First Class'; elseif (marks >= 825 and marks < 900) then set stud_class = 'Higher Second Class'; end if; insert into Result values(roll, stud_name, stud_class); end//
Query OK, 0 rows affected (0.00 sec)

mysql> select * from Stud_Marks;
    -> //
+---------+------------+
| name    | totalMarks |
+---------+------------+
| Gaurav  |        900 |
| Kanak   |        910 |
| Sarthak |        905 |
+---------+------------+
3 rows in set (0.00 sec)

mysql> call proc_Grade(1, 900, 'Gaurav');
    -> //
Query OK, 1 row affected (0.03 sec)

mysql> select * from Result;
    -> //
+---------+--------+-------------+
| Roll_no | name   | class       |
+---------+--------+-------------+
|       1 | Gaurav | First Class |
+---------+--------+-------------+
1 row in set (0.00 sec)

mysql> call insertStudMarks('Bahubali', 1000);
    -> //
Query OK, 1 row affected (0.06 sec)

mysql> call proc_Grade(4, 1000, 'Bahubali');
    -> //
Query OK, 1 row affected (0.01 sec)

mysql> select * from Result;
    -> //
+---------+----------+-------------+
| Roll_no | name     | class       |
+---------+----------+-------------+
|       1 | Gaurav   | First Class |
|       4 | Bahubali | Distinction |
+---------+----------+-------------+
2 rows in set (0.00 sec)



mysql> create function insertStudMarksF(marks int, stud_name varchar(20), roll int) 
	returns varchar(20) 
	deterministic 
	begin 
	declare stud_class varchar(20); 
	if (marks >= 990 and marks <= 1500) then 
	set stud_class = 'Distinction'; 
	elseif (marks >= 900 and marks <= 989) then 
	set stud_class = 'First Class'; 
	elseif (marks >= 825 and marks < 900) then 
	set stud_class = 'Higher Second Class'; 
	end if; 
	return stud_class; 
	end//
Query OK, 0 rows affected (0.00 sec)



mysql> delimiter ;
mysql> insert into Result values(2, 'Kanak', insertStudMarksF(910, 'Kanak', 2));
Query OK, 1 row affected (0.02 sec)

mysql> select * from Result;
+---------+----------+-------------+
| Roll_no | name     | class       |
+---------+----------+-------------+
|       1 | Gaurav   | First Class |
|       2 | Kanak    | First Class |
|       4 | Bahubali | Distinction |
+---------+----------+-------------+
3 rows in set (0.00 sec)




